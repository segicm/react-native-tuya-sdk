{"version":3,"file":"react-native-tuya.esm.js","sources":["../src/bridgeUtils.ts","../src/activator.ts","../src/device.ts","../src/deviceSubscriptions.ts","../src/home.ts","../src/homeDataManager.ts","../src/homeManager.ts","../src/homeMember.ts","../src/ota.ts","../src/timer.ts","../src/user.ts"],"sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native';\nimport { DeviceBean } from 'device'\nimport { DeviceSchemaItem } from 'home'\n\nexport const GROUPLISTENER = 'groupListener';\nexport const HARDWAREUPGRADELISTENER = 'hardwareUpgradeListener';\nexport const DEVLISTENER = 'devListener';\nexport const SUBDEVLISTENER = 'subDevListener';\nexport const HOMESTATUS = 'homeStatus';\nexport const HOMECHANGE = 'homeChange';\nexport const SINGLETRANSFER = 'SingleTransfer';\n\nlet eventEmitter = new NativeEventEmitter(NativeModules.TuyaRNEventEmitter);\n\nexport function addEvent(eventName: string, callback: (data: any) => any) {\n  return eventEmitter.addListener(eventName, callback);\n}\nexport const bridge = (key: string, id: string | number) => `${key}//${id}`;\n\n/*\n * On iOS home devices list has differences in structure, soo need to make it same as on android\n * */\nexport const prepareDeviceBean = (device: DeviceBean & { schema: string; }) => {\n  const schema = JSON.parse(device.schema) as Array<DeviceSchemaItem>;\n  const schemaMap: Record<string, DeviceSchemaItem> = {};\n  const dpCodeSchemaMap: Record<string, DeviceSchemaItem> = {};\n  schema.forEach((item) => {\n    schemaMap[item.id] = item;\n    dpCodeSchemaMap[item.code] = item;\n  });\n  return {\n    ...device,\n    schemaMap,\n    productBean: {\n      schemaInfo: {\n        dpCodeSchemaMap,\n      },\n    }\n  };\n};\n","import { DeviceBean } from 'device';\nimport { NativeModules, Platform } from 'react-native';\nimport { DeviceDetailResponse } from './home';\nimport { prepareDeviceBean } from './bridgeUtils'\n\nconst tuya = NativeModules.TuyaActivatorModule;\nconst tuyaBLEActivator = NativeModules.TuyaBLEActivatorModule;\nconst tuyaBLEScanner = NativeModules.TuyaBLEScannerModule;\n\nexport function openNetworkSettings() {\n  return tuya.openNetworkSettings({});\n}\n\nexport enum TuyaActivationType {\n  EZ = 'TY_EZ',\n  AP = 'TY_AP',\n  QR = 'TY_QR',\n}\n\nexport type InitActivatorParams = {\n  homeId: number;\n  ssid: string;\n  password: string;\n  time: number;\n  type: TuyaActivationType;\n};\n\nexport interface InitBluetoothActivatorParams {\n  deviceId?: string;\n  homeId: number;\n  ssid: string;\n  password: string;\n}\n\nexport interface StartLeScanParams {\n  timeout: number;\n  homeId: number;\n  scanType:\n    | 'SINGLE'\n    | 'SINGLE_QR'\n    | 'MESH'\n    | 'SIG_MESH'\n    | 'NORMAL'\n    | 'TY_BEACON';\n}\n\ntype IOSBLEActivatorParams = {\n  homeId: number;\n  ssid: string;\n  password: string;\n  timeout: number;\n  deviceId: string;\n  productId: string;\n};\ntype AndroidBLEActivatorParams = {\n  homeId: number;\n  ssid: string;\n  password: string;\n  timeout: number;\n  uuid: string;\n  deviceType: number;\n  mac: string;\n  address: string;\n  token: string;\n};\nexport type InitBluetoothActivatorFromScanBeanParams =\n  | IOSBLEActivatorParams\n  | AndroidBLEActivatorParams;\n\nexport async function initActivator(\n  params: InitActivatorParams\n): Promise<DeviceDetailResponse> {\n  if (Platform.OS === 'ios') {\n    const device = await tuya.initActivator(params);\n    return prepareDeviceBean(device);\n  }\n  return tuya.initActivator(params);\n}\n\nexport type GetActivatorTokenParams = {\n  homeId: number;\n};\n\nexport function getActivatorToken(params: GetActivatorTokenParams) {\n  return tuya.getActivatorToken(params);\n}\n\nexport type StartQRActivatorParams = {\n  token: string;\n  time: number;\n};\n\nexport type ActiveBleParams = {deviceInfo: any, homeId: string};\n\nexport async function startQRActivator(params: StartQRActivatorParams): Promise<DeviceDetailResponse> {\n  if (Platform.OS === 'ios') {\n    const device = await tuya.initActivator({ ...params, type: 'TY_QR' });\n    return prepareDeviceBean(device);\n  }\n  return tuya.startQRActivator(params);\n}\n\nexport function stopQRActivator() {\n  if (Platform.OS === 'ios') {\n    return stopConfig();\n  }\n  return tuya.stopQRActivator();\n}\n\nexport function stopConfig() {\n  return tuya.stopConfig();\n}\n\nexport function startBluetoothScan(params: StartLeScanParams) {\n  if (Platform.OS === 'ios') {\n    return tuyaBLEScanner.startBluetoothLEScan();\n  }\n  return tuya.startBluetoothScan(params);\n}\n\nexport function activeBLE({deviceInfo, homeId}: ActiveBleParams) {\n  return tuyaBLEScanner.activeBLE({deviceInfo, homeId});\n}\n\nexport async function initBluetoothDualModeActivator(\n  params: InitBluetoothActivatorParams\n): Promise<DeviceBean> {\n  if (Platform.OS === 'ios') {\n    const device = await tuyaBLEActivator.initActivator(params);\n    return prepareDeviceBean(device);\n  }\n  return tuya.initBluetoothDualModeActivator(params);\n}\n\nexport async function initBluetoothDualModeActivatorFromScanBean(\n  params: InitBluetoothActivatorFromScanBeanParams\n): Promise<DeviceBean> {\n  if (Platform.OS === 'ios') {\n    const device = await tuyaBLEActivator.initActivator(params);\n    return prepareDeviceBean(device);\n  }\n  return tuya.initBluetoothDualModeActivatorFromScanBean(params);\n}\n\nexport function stopLeScan() {\n  if (Platform.OS === 'ios') {\n    return tuyaBLEScanner.stopBluetoothScan();\n  }\n  return tuya.stopBluetoothScan();\n}\n\nexport function stopLePairing() {\n  if (Platform.OS === 'ios') {\n    return tuyaBLEActivator.stopLePairing();\n  }\n  return tuya.stopLeActivation();\n}\n\nexport function getCurrentWifi(\n  success: (ssid: string) => void,\n  error: () => void\n) {\n  // We need the Allow While Using App location permission to use this.\n  return tuya.getCurrentWifi({}, success, error);\n}\n","import { NativeModules, EmitterSubscription } from 'react-native';\nimport { addEvent, bridge, DEVLISTENER } from './bridgeUtils';\nimport { DeviceSchemaItem } from './home';\n\nconst tuya = NativeModules.TuyaDeviceModule;\n\nexport type DeviceBean = {\n  productId: string;\n  devId: string;\n  verSw: string;\n  name: string;\n  dps: DeviceDps;\n  deviceType?: number;\n  address?: string;\n  homeId: number;\n  isOnline: boolean;\n  homeDisplayOrder: number;\n  roomId: number;\n  mac: string;\n  ip: string;\n  uuid: string;\n  timezoneId: string;\n  schemaMap: Record<number, DeviceSchemaItem>;\n  productBean: {\n    schemaInfo: {\n      dpCodeSchemaMap: Record<string, DeviceSchemaItem>;\n    };\n  }\n};\n\nexport type DevListenerParams = {\n  devId: string;\n};\n\nexport type DevListenerType =\n  | 'onDpUpdate'\n  | 'onRemoved'\n  | 'onStatusChanged'\n  | 'onNetworkStatusChanged'\n  | 'onDevInfoUpdate'\n  | 'onFirmwareUpgradeSuccess'\n  | 'onFirmwareUpgradeFailure'\n  | 'onFirmwareUpgradeProgress';\n\nlet devListenerSubs: { [devId: string]: EmitterSubscription } = {};\n\nexport function registerDevListener(\n  params: DevListenerParams,\n  type: DevListenerType,\n  callback: (data: any) => void\n) {\n  tuya.registerDevListener(params);\n  const sub = addEvent(bridge(DEVLISTENER, params.devId), data => {\n    if (data.type === type) {\n      callback(data);\n    }\n  });\n  devListenerSubs[params.devId] = sub;\n}\n\nexport function unRegisterAllDevListeners() {\n  for (const devId in devListenerSubs) {\n    const sub = devListenerSubs[devId];\n    sub.remove();\n    tuya.unRegisterDevListener({ devId });\n  }\n  devListenerSubs = {};\n}\n\nexport type DeviceDpValue = boolean | number | string;\nexport type DeviceDps = {\n  [dpId: string]: DeviceDpValue;\n};\nexport type SendParams = {\n  devId: string;\n} & DeviceDps;\n\nexport function send(params: object) {\n  return tuya.send(params);\n}\n\nexport type RemoveDeviceParams = { devId: string };\n\nexport function removeDevice(params: RemoveDeviceParams): Promise<string> {\n  return tuya.removeDevice(params);\n}\n\nexport type RenameDeviceParams = { devId: string; name: string };\n\nexport function renameDevice(params: RenameDeviceParams): Promise<string> {\n  return tuya.renameDevice(params);\n}\n\nexport type GetDataPointStatsParams = {\n  devId: string;\n  DataPointTypeEnum: 'DAY' | 'WEEK' | 'MONTH';\n  number: number; // number of historical data result values, up to 50\n  dpId: string;\n  startTime: number; // in ms\n};\n\nexport function getDataPointStat(\n  params: GetDataPointStatsParams\n): Promise<any> {\n  return tuya.getDataPointStat(params);\n}\n\nexport function getLockMemberList(devId: string): Promise<any> {\n  return tuya.getProLockMemberListWithDevId(devId);\n}\n\nexport function getDp(dpId: object): Promise<any> {\n  return tuya.getDp(dpId);\n}\n\nexport function checkIsBLEConnected(devId: string): Promise<boolean> {\n  return tuya.checkIsBLEConnected(devId);\n}\n\nexport function getProBoundUnlockOpModeListWithDevId(devId: string, userId: string): Promise<boolean> {\n  return tuya.getProBoundUnlockOpModeListWithDevId(devId, userId);\n}\n\nexport function isProNeedAllocUnlockOpMode(devId: string): Promise<boolean> {\n  return tuya.isProNeedAllocUnlockOpMode(devId);\n}\n\nexport function getProOfflinePasswordWithDevId(devId: string): Promise<boolean> {\n  return tuya.getProOfflinePasswordWithDevId(devId);\n}\n\nexport function getLockDynamicPasswordWithSuccess(devId: string): Promise<string> {\n  return tuya.getLockDynamicPasswordWithSuccess(devId);\n}\n\nexport function getProUnboundUnlockOpModeListWithDevId(devId: string): Promise<boolean> {\n  return tuya.getProUnboundUnlockOpModeListWithDevId(devId);\n}\n\nexport function addMemberWithUserName(devId: string, date: Date): Promise<boolean> {\n  return tuya.addMemberWithUserName(devId, date);\n}\n\nexport function getProPasswordListWithDevId(devId: string): Promise<boolean> {\n  return tuya.getProPasswordListWithDevId(devId);\n}\n\nexport function checkDeviceConnectionStatus(devId: string): Promise<boolean> {\n  return tuya.checkIsOnline(devId);\n}\n\nexport function getProCurrentMemberDetailWithDevId(devId: string): Promise<any> {\n  return tuya.getProCurrentMemberDetailWithDevId(devId);\n}\n\nexport function bleManualLockDevice(devId: string): Promise<any> {\n  return tuya.bleManualLockDevice(devId);\n}\n","import { NativeModules } from 'react-native'\nimport { addEvent, bridge, DEVLISTENER } from './bridgeUtils'\n\nconst tuya = NativeModules.TuyaDeviceModule;\n\nexport enum DeviceListenerType {\n  onDpUpdate = 'onDpUpdate',\n  onRemoved = 'onRemoved',\n  onStatusChanged = 'onStatusChanged',\n  onNetworkStatusChanged = 'onNetworkStatusChanged',\n  onDevInfoUpdate = 'onDevInfoUpdate',\n  onFirmwareUpgradeSuccess = 'onFirmwareUpgradeSuccess',\n  onFirmwareUpgradeFailure = 'onFirmwareUpgradeFailure',\n  onFirmwareUpgradeProgress = 'onFirmwareUpgradeProgress',\n}\n\nconst subscriptions: Record<string, number> = {};\n\ntype TDeviceListenerOptions = {\n  devId: string;\n  type: DeviceListenerType;\n}\nexport const addDeviceListener = ({ devId, type}: TDeviceListenerOptions, cb: (data: unknown) => void, onError?: (e: unknown) => void) => {\n  if (!subscriptions[devId]) {\n    tuya.registerDevListener({ devId }).catch((e: unknown) => onError?.(e));\n    subscriptions[devId] = 0;\n  }\n  const sub = addEvent(bridge(DEVLISTENER, devId), data => {\n    if (data.type === type) {\n      cb(data);\n    }\n  });\n  subscriptions[devId]++;\n\n  return {\n    remove: () => {\n      sub.remove();\n      if (subscriptions[devId] <= 1) {\n        tuya.unRegisterDevListener({ devId });\n      }\n      subscriptions[devId]--;\n    }\n  }\n};\n\nexport const removeAllDeviceListeners = () => {\n  Object.keys(subscriptions).forEach((devId) => {\n    tuya.unRegisterDevListener({ devId });\n    delete subscriptions[devId];\n  });\n};\n","import { NativeModules, Platform } from 'react-native';\nimport { DeviceBean } from './device';\nimport { prepareDeviceBean } from './bridgeUtils'\n\nconst tuya = NativeModules.TuyaHomeModule;\n\nexport type QueryRoomListParams = {\n  homeId?: number;\n};\nexport type QueryRoomListResponse = {\n  name: string;\n  displayOrder: number;\n  id: number;\n  roomId: number;\n}[];\n\nexport function queryRoomList(\n  params: QueryRoomListParams\n): Promise<QueryRoomListResponse> {\n  return tuya.queryRoomList(params);\n}\n\nexport type GetHomeDetailParams = {\n  homeId: number;\n};\nexport type DeviceSchemaItem = {\n  id: number;\n  code: string;\n  name: string;\n  extContent: string;\n  type: 'obj' | 'raw';\n  schemaType: 'bool' | 'value' | 'enum' | 'string';\n  property: string;\n  mode: string;\n};\nexport type DeviceDetailResponse = DeviceBean;\nexport type GetHomeDetailResponse = {\n  deviceList: DeviceDetailResponse[];\n  groupList: any[];\n  meshList: any[];\n  sharedDeviceList: any[];\n  sharedGroupList: any[];\n};\n\nexport async function getHomeDetail (\n  params: GetHomeDetailParams\n): Promise<GetHomeDetailResponse> {\n  const homeDetails = await tuya.getHomeDetail(params);\n\n  /*\n  * On iOS home devices list has differences in structure, soo need to make it same as on android\n  * */\n  if (Platform.OS === 'ios' && homeDetails.deviceList) {\n    const deviceList = homeDetails.deviceList?.map((i: DeviceDetailResponse & { schema: string}) => {\n      return prepareDeviceBean(i);\n    });\n\n    return { ...homeDetails, deviceList }\n  }\n  return homeDetails;\n}\n\nexport type UpdateHomeParams = {\n  homeId: number;\n  name: string;\n  geoName: string;\n  lon: number;\n  lat: number;\n};\n\nexport function updateHome(params: UpdateHomeParams): Promise<string> {\n  return tuya.updateHome(params);\n}\n\nexport type DismissHomeParams = {\n  homeId: number;\n};\n\nexport function dismissHome(params: DismissHomeParams): Promise<string> {\n  return tuya.dismissHome(params);\n}\n\nexport type SortRoomsParams = {\n  idList: number[];\n  homeId: number;\n};\n\nexport function sortRoom(params: SortRoomsParams): Promise<string> {\n  return tuya.sortRoom(params);\n}\n","import { NativeModules } from 'react-native';\n\nconst tuya = NativeModules.TuyaHomeDataManagerModule;\n\nexport type GetRoomDeviceListParams = {\n  homeId?: number;\n  roomId: number;\n};\n\nexport type GetRoomDeviceListResponse = {\n  deviceList: {}[];\n  groupList: {}[];\n};\n\nexport function getRoomDeviceList(\n  params: GetRoomDeviceListParams\n): Promise<GetRoomDeviceListResponse> {\n  return tuya.getRoomDeviceList(params);\n}\n","import { NativeModules, Platform } from 'react-native';\n\nconst tuya = NativeModules.TuyaHomeManagerModule;\n\nexport type CreateHomeParams = {\n  name: string;\n  geoName: string;\n  lon: number;\n  lat: number;\n  rooms: string[];\n};\n\nexport function createHome(params: CreateHomeParams): Promise<{ homeId: number } & Partial<HomeDetailsResponse>> {\n  return tuya.createHome(params);\n}\n\nexport type HomeDetailsResponse = {\n  name: string;\n  admin: boolean;\n  background: string;\n  dealStatus: 1 | 2; // 1 = unaccepted 2 = accepted\n  displayOrder: number;\n  geoName: string;\n  gid: number;\n  homeId: number;\n  lat: number;\n  lon: number;\n};\n\nexport type QueryHomeListResponse = HomeDetailsResponse[];\n\nexport async function queryHomeList(): Promise<QueryHomeListResponse> {\n  let homes = await tuya.queryHomeList();\n  // Tuya's Android SDK uses different property names than the iOS SDK...\n  if (Platform.OS === 'android') {\n    homes = homes.map((m: any) => ({\n      ...m,\n      dealStatus: m.homeStatus,\n    }));\n  }\n  return homes;\n}\n\nexport type JoinFamilyParams = {\n  homeId: number;\n  action: boolean;\n};\n\nexport function joinFamily(params: JoinFamilyParams) {\n  return tuya.joinFamily(params);\n}\n","import { NativeModules, Platform } from 'react-native';\n\nconst tuya = NativeModules.TuyaHomeMemberModule;\n\nexport type QueryMemberListParams = { homeId: number };\nexport type MemberListItem = {\n  admin: boolean;\n  username: string;\n  id: number;\n  dealStatus: number;\n};\nexport type QueryMemberListResponse = MemberListItem[];\n\nexport async function queryMemberList(\n  params: QueryMemberListParams\n): Promise<QueryMemberListResponse> {\n  let members = await tuya.queryMemberList(params);\n  // Tuya's Android SDK uses different property names than the iOS SDK...\n  if (Platform.OS === 'android') {\n    members = members.map((m: any) => ({\n      admin: m.admin,\n      username: m.account,\n      id: m.memberId,\n      dealStatus: m.memberStatus,\n    }));\n  }\n  return members;\n}\n\nexport type AddMemberParams = {\n  homeId: number;\n  userAccount: string; // email\n  countryCode: string;\n  name: string;\n  admin: boolean;\n};\n\nexport function addMember(params: AddMemberParams): Promise<any> {\n  return tuya.addMember(params);\n}\n\nexport type RemoveMemberParams = {\n  memberId: number;\n};\n\nexport function removeMember(params: RemoveMemberParams): Promise<any> {\n  return tuya.removeMember(params);\n}\n","import { NativeModules } from 'react-native';\nimport { addEvent, bridge, HARDWAREUPGRADELISTENER } from './bridgeUtils';\n\nconst tuya = NativeModules.TuyaDeviceModule;\n\nexport type StartOtaParams = {\n  devId: string;\n};\n\nexport function startOta(\n  params: StartOtaParams,\n  onSuccess: (data: any) => void,\n  onFailure: (data: any) => void,\n  onProgress: (data: any) => void\n) {\n  tuya.startOta(params);\n  return addEvent(bridge(HARDWAREUPGRADELISTENER, params.devId), data => {\n    if (data.type === 'onSuccess') {\n      onSuccess(data);\n    } else if (data.type === 'onFailure') {\n      onFailure(data);\n    } else if (data.type === 'onProgress') {\n      onProgress(data);\n    }\n  });\n}\n\nexport function getOtaInfo(params: StartOtaParams): Promise<any[]> {\n  return tuya.getOtaInfo(params);\n}\n","import { NativeModules } from 'react-native';\nimport { DeviceDps } from './device';\n\nconst tuya = NativeModules.TuyaTimerModule;\n\nexport type AddTimerWithTaskDpsParams = {\n  devId: number;\n  taskName: string;\n  loops: string; // Number of cycles \"0000000\", each 0: off, 1: on, from left to right: Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday\n  time: string; // e.g. 14:29\n  dps: DeviceDps;\n};\n\nexport function addTimerWithTask(\n  params: AddTimerWithTaskDpsParams\n): Promise<any> {\n  return tuya.addTimerWithTask(params);\n}\n\nexport type UpdateTimerWithTaskParams = AddTimerWithTaskDpsParams & {\n  timerId: string;\n  isOpen: boolean;\n};\n\nexport function updateTimerWithTask(\n  params: UpdateTimerWithTaskParams\n): Promise<any> {\n  return tuya.updateTimerWithTask(params);\n}\n\nexport type GetTimerTaskStatusWithDeviceIdParams = {\n  devId: number;\n};\n\nexport function getTimerTaskStatusWithDeviceId(\n  params: GetTimerTaskStatusWithDeviceIdParams\n): Promise<any> {\n  return tuya.getTimerTaskStatusWithDeviceId(params);\n}\n\nexport type GetAllTimerWithDeviceIdParams = {\n  devId: number;\n};\n\nexport type TimerTask = {\n  timerList: {\n    timerId: string;\n    loops: string;\n    time: string;\n    status: number;\n  }[];\n  timerTaskStatus: { open: boolean; timerName: string };\n};\n\nexport type GetAllTimerWithDeviceIdResponse = TimerTask[];\n\nexport async function getAllTimerWithDeviceId(\n  params: GetAllTimerWithDeviceIdParams\n): Promise<GetAllTimerWithDeviceIdResponse> {\n  const timers = await tuya.getAllTimerWithDeviceId(params);\n  timers.forEach((t: any) => {\n    t.timerTaskStatus.open = !!t.timerTaskStatus.open;\n  });\n  return timers;\n}\n\nexport type RemoveTimerWithTaskParams = {\n  devId: number;\n  taskName: string;\n  timerId: string;\n};\n\nexport function removeTimerWithTask(\n  params: RemoveTimerWithTaskParams\n): Promise<any> {\n  return tuya.removeTimerWithTask(params);\n}\n\nexport type UpdateTimerStatusWithTaskParams = {\n  devId: number;\n  taskName: string;\n  timerId: string;\n  isOpen: boolean;\n};\n\nexport function updateTimerStatusWithTask(\n  params: UpdateTimerStatusWithTaskParams\n): Promise<any> {\n  return tuya.updateTimerStatusWithTask(params);\n}\n","import { NativeModules } from 'react-native';\n\nconst tuya = NativeModules.TuyaUserModule;\n\nexport function registerAccountWithEmail(\n  params: RegisterAccountWithEmailParams\n): Promise<any> {\n  return tuya.registerAccountWithEmail(params);\n}\n\nexport function getRegisterEmailValidateCode(\n  params: GetEmailValidateCodeParams\n): Promise<any> {\n  return tuya.getRegisterEmailValidateCode(params);\n}\n\nexport function sendVerifyCodeWithUserName(params: SendVerifyCodeWithUserNameParams): Promise<any> {\n  return tuya.sendVerifyCodeWithUserName(params);\n}\n\nexport function loginWithEmail(params: LoginWithEmailParams): Promise<any> {\n  return tuya.loginWithEmail(params);\n}\n\nexport function getEmailValidateCode(\n  params: GetEmailValidateCodeParams\n): Promise<any> {\n  return tuya.getEmailValidateCode(params);\n}\n\nexport function resetEmailPassword(\n  params: ResetEmailPasswordParams\n): Promise<any> {\n  return tuya.resetEmailPassword(params);\n}\n\nexport function logout(): Promise<string> {\n  return tuya.logout();\n}\n\nexport function getCurrentUser(): Promise<User | null> {\n  return tuya.getCurrentUser();\n}\n\nexport function getUser(): Promise<User | null> {\n  return tuya.getUser();\n}\n\nexport function cancelAccount(): Promise<string> {\n  return tuya.cancelAccount();\n}\n\nexport async function loginWithUid(params: LoginWithUIDParams): Promise<any> {\n  return tuya.loginWithUid(params);\n}\n\nexport async function loginOrRegisterWithUid(params: LoginOrRegisterWithUidParams): Promise<any> {\n  return tuya.loginOrRegisterWithUid(params);\n}\n\nexport type User = {\n  email: string;\n  username: string;\n  sid: string;\n  timezoneId: string;\n  uid: string;\n  userType: number;\n  headPic: string;\n  mobile: string;\n  nickName: string;\n  phoneCode: string;\n};\n\nexport type RegisterAccountWithEmailParams = {\n  countryCode: string;\n  email: string;\n  validateCode: string;\n  password: string;\n};\n\nexport type GetEmailValidateCodeParams = {\n  countryCode: string;\n  email: string;\n};\n\nexport type SendVerifyCodeWithUserNameParams = {\n  countryCode: string;\n  email: string;\n  region: string;\n  type: 1 | 2 | 3;\n}\n\nexport type LoginWithEmailParams = {\n  email: string;\n  password: string;\n  countryCode: string;\n};\n\nexport type ResetEmailPasswordParams = {\n  email: string;\n  countryCode: string;\n  validateCode: string;\n  newPassword: string;\n};\n\nexport type LoginWithUIDParams = {\n  uid: string;\n  password: string;\n  countryCode: string;\n}\n\nexport type LoginOrRegisterWithUidParams = {\n  uid: string;\n  password: string;\n  countryCode: string;\n}\n"],"names":["GROUPLISTENER","HARDWAREUPGRADELISTENER","DEVLISTENER","SUBDEVLISTENER","HOMESTATUS","HOMECHANGE","SINGLETRANSFER","eventEmitter","NativeEventEmitter","NativeModules","TuyaRNEventEmitter","addEvent","eventName","callback","addListener","bridge","key","id","prepareDeviceBean","device","schema","JSON","parse","schemaMap","dpCodeSchemaMap","forEach","item","code","_extends","productBean","schemaInfo","tuya","TuyaActivatorModule","tuyaBLEActivator","TuyaBLEActivatorModule","tuyaBLEScanner","TuyaBLEScannerModule","openNetworkSettings","TuyaActivationType","initActivator","_x","_initActivator","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","wrap","_callee$","_context","prev","next","Platform","OS","sent","abrupt","stop","getActivatorToken","startQRActivator","_x2","_startQRActivator","_callee2","_callee2$","_context2","type","stopQRActivator","stopConfig","startBluetoothScan","startBluetoothLEScan","activeBLE","_ref","deviceInfo","homeId","initBluetoothDualModeActivator","_x3","_initBluetoothDualModeActivator","_callee3","_callee3$","_context3","initBluetoothDualModeActivatorFromScanBean","_x4","_initBluetoothDualModeActivatorFromScanBean","_callee4","_callee4$","_context4","stopLeScan","stopBluetoothScan","stopLePairing","stopLeActivation","getCurrentWifi","success","error","TuyaDeviceModule","devListenerSubs","registerDevListener","sub","devId","data","unRegisterAllDevListeners","remove","unRegisterDevListener","send","removeDevice","renameDevice","getDataPointStat","getLockMemberList","getProLockMemberListWithDevId","getDp","dpId","checkIsBLEConnected","getProBoundUnlockOpModeListWithDevId","userId","isProNeedAllocUnlockOpMode","getProOfflinePasswordWithDevId","getLockDynamicPasswordWithSuccess","getProUnboundUnlockOpModeListWithDevId","addMemberWithUserName","date","getProPasswordListWithDevId","checkDeviceConnectionStatus","checkIsOnline","getProCurrentMemberDetailWithDevId","bleManualLockDevice","DeviceListenerType","subscriptions","addDeviceListener","cb","onError","e","removeAllDeviceListeners","Object","keys","TuyaHomeModule","queryRoomList","getHomeDetail","_getHomeDetail","homeDetails","_homeDetails$deviceLi","deviceList","map","i","updateHome","dismissHome","sortRoom","TuyaHomeDataManagerModule","getRoomDeviceList","TuyaHomeManagerModule","createHome","queryHomeList","_queryHomeList","homes","m","dealStatus","homeStatus","joinFamily","TuyaHomeMemberModule","queryMemberList","_queryMemberList","members","admin","username","account","memberId","memberStatus","addMember","removeMember","startOta","onSuccess","onFailure","onProgress","getOtaInfo","TuyaTimerModule","addTimerWithTask","updateTimerWithTask","getTimerTaskStatusWithDeviceId","getAllTimerWithDeviceId","_getAllTimerWithDeviceId","timers","t","timerTaskStatus","open","removeTimerWithTask","updateTimerStatusWithTask","TuyaUserModule","registerAccountWithEmail","getRegisterEmailValidateCode","sendVerifyCodeWithUserName","loginWithEmail","getEmailValidateCode","resetEmailPassword","logout","getCurrentUser","getUser","cancelAccount","loginWithUid","_loginWithUid","loginOrRegisterWithUid","_loginOrRegisterWithUid"],"mappings":"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"}